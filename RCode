# Loading required libraries
library(dplyr)
library(ggplot2)
library(cluster)
library(factoextra)
library(gridExtra)
library(grid)
library(plotrix)
library(purrr)

# Reading the data
Mall_Customers <- read.csv('Mall_Customers.csv')

# Data exploration
str(Mall_Customers)
summary(Mall_Customers)

# Customer Gender Visualization
a <- table(Mall_Customers$Gender)
barplot(a, main = "Using BarPlot to Display Gender Comparison",
        ylab = "Count", xlab = "Gender", col = rainbow(2),
        legend = rownames(a))

# Pie chart for gender distribution
pct <- round(a / sum(a) * 100)
lbs <- paste(c("Female", "Male"), " ", pct, "%", sep = " ")
pie3D(a, labels = lbs, main = "Pie Chart Depicting Ratio of Female and Male")

# Age distribution visualization
summary(Mall_Customers$Age)
hist(Mall_Customers$Age, col = "yellow",
     main = "Histogram to Show Count of Age Class",
     xlab = "Age Class", ylab = "Frequency", labels = TRUE)

# Boxplot for age
boxplot(Mall_Customers$Age, col = "#ff0066", main = "Boxplot for Descriptive Analysis of Age")

# Analyzing Annual Income
summary(Mall_Customers$`Annual Income (k$)`)
hist(Mall_Customers$`Annual Income (k$)`, col = "#3399FF",
     xlab = "Annual Income Class", ylab = "Frequency",
     main = "Histogram for Annual Income", labels = TRUE)
plot(density(Mall_Customers$`Annual Income (k$)`), col = "yellow",
     main = "Density Plot for Annual Income",
     xlab = "Annual Income Class", ylab = "Density")
polygon(density(Mall_Customers$`Annual Income (k$)`), col = "#ccff66")

# Analyzing Spending Score
summary(Mall_Customers$`Spending Score (1-100)`)
boxplot(Mall_Customers$`Spending Score (1-100)`, horizontal = TRUE,
        col = "#990000", main = "Boxplot for Descriptive Analysis of Spending Score")
hist(Mall_Customers$`Spending Score (1-100)`, main = "Histogram for Spending Scores",
     xlab = "Spending Score Class", ylab = "Frequency", col = "#6600cc", labels = TRUE)

# K-means clustering
set.seed(123)
k6 <- kmeans(Mall_Customers[, 3:5], 6, iter.max = 100, nstart = 50, algorithm = "Lloyd")

# Elbow Method for optimal clusters
iss <- function(k) {
  kmeans(Mall_Customers[, 3:5], k, iter.max = 100, nstart = 100, algorithm = "Lloyd")$tot.withinss
}
k.values <- 1:10
iss_values <- map_dbl(k.values, iss)
plot(k.values, iss_values, type = "b", pch = 19, frame = FALSE,
     xlab = "Number of Clusters K", ylab = "Total Intra-cluster Sum of Squares")

# Silhouette Method for optimal clusters
k2 <- kmeans(Mall_Customers[, 3:5], 2, iter.max = 100, nstart = 50, algorithm = "Lloyd")
s2 <- plot(silhouette(k2$cluster, dist(Mall_Customers[, 3:5], "euclidean")))
k3 <- kmeans(Mall_Customers[, 3:5], 3, iter.max = 100, nstart = 50, algorithm = "Lloyd")
s3 <- plot(silhouette(k3$cluster, dist(Mall_Customers[, 3:5], "euclidean")))
k4 <- kmeans(Mall_Customers[, 3:5], 4, iter.max = 100, nstart = 50, algorithm = "Lloyd")
s4 <- plot(silhouette(k4$cluster, dist(Mall_Customers[, 3:5], "euclidean")))
k5 <- kmeans(Mall_Customers[, 3:5], 5, iter.max = 100, nstart = 50, algorithm = "Lloyd")
s5 <- plot(silhouette(k5$cluster, dist(Mall_Customers[, 3:5], "euclidean")))
k6 <- kmeans(Mall_Customers[, 3:5], 6, iter.max = 100, nstart = 50, algorithm = "Lloyd")
s6 <- plot(silhouette(k6$cluster, dist(Mall_Customers[, 3:5], "euclidean")))
k7 <- kmeans(Mall_Customers[, 3:5], 7, iter.max = 100, nstart = 50, algorithm = "Lloyd")
s7 <- plot(silhouette(k7$cluster, dist(Mall_Customers[, 3:5], "euclidean")))
k8 <- kmeans(Mall_Customers[, 3:5], 8, iter.max = 100, nstart = 50, algorithm = "Lloyd")
s8 <- plot(silhouette(k8$cluster, dist(Mall_Customers[, 3:5], "euclidean")))
k9 <- kmeans(Mall_Customers[, 3:5], 9, iter.max = 100, nstart = 50, algorithm = "Lloyd")
s9 <- plot(silhouette(k9$cluster, dist(Mall_Customers[, 3:5], "euclidean")))
k10 <- kmeans(Mall_Customers[, 3:5], 10, iter.max = 100, nstart = 50, algorithm = "Lloyd")
s10 <- plot(silhouette(k10$cluster, dist(Mall_Customers[, 3:5], "euclidean")))

fviz_nbclust(Mall_Customers[, 3:5], kmeans, method = "silhouette")

# Gap Statistic Method
set.seed(125)
stat_gap <- clusGap(Mall_Customers[, 3:5], FUN = kmeans, nstart = 25, K.max = 10, B = 50)
fviz_gap_stat(stat_gap)

# K-means clustering plot
ggplot(Mall_Customers, aes(x = `Annual Income (k$)`, y = `Spending Score (1-100)`)) +
  geom_point(stat = "identity", aes(color = as.factor(k6$cluster))) +
  scale_color_discrete(name = " ",
                       breaks = c("1", "2", "3", "4", "5", "6"),
                       labels = c("Cluster 1", "Cluster 2", "Cluster 3", "Cluster 4", "Cluster 5", "Cluster 6")) +
  ggtitle("Segments of Mall Customers", subtitle = "Using K-means Clustering")

# PCA clustering plot
kCols <- function(vec) {cols = rainbow(length(unique(vec)))
  return(cols[as.numeric(as.factor(vec))])
}
digCluster <- k6$cluster
dignm <- as.character(digCluster)
plot(pcclust$x[, 1:2], col = kCols(digCluster), pch = 19, xlab = "K-means", ylab = "Classes")
legend("bottomleft", unique(dignm), fill = unique(kCols(digCluster)))
